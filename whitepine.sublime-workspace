{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Print",
				"Println	n int, err error ƒ"
			],
			[
				"P",
				"Printf	n int, err error ƒ"
			],
			[
				"sell_e",
				"sells_event_codes"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "DELIMITER ;\ndrop schema if exists rapnet_listings;\ncreate schema rapnet_listings;\nuse rapnet_listings;\n\ncreate table listing (\nLotNum bigint primary key,\nOwner text,\nShape text,\nCarat text,\nColor text,\nClarity text,\nCutGrade text,\nPrice text,\nPctRap text,\nCert text,\nDepth text,\nTableWidth text,\nGirdle text,\nCulet text,\nPolish text,\nSym text,\nFluor text,\nMeas text,\nRapnetComment text,\nNumStones text,\nCertNum text,\nStockNum text,\nMake text,\nDate datetime,\nCity text,\nState text,\nCountry text,\nImage text\n);\n\ncreate table active_listing like listing;\ncreate table listing_tmp like listing;\n\ncreate table listing_event_code\n(\nCode int primary key auto_increment,\nDescription text not null\n);\n\ninsert into listing_event_code (Description) values\n    ('Added'), ('Removed'), ('PriceChanged');\n\ncreate table listing_event (\nEventId bigint NOT NULL AUTO_INCREMENT,\nLotNum bigint NOT NULL,\nPrice text,\nDate datetime,\nEventDate datetime,\nEventCode int NOT NULL,\nPRIMARY KEY (EventId),\nINDEX USING HASH (LotNum),\nINDEX USING HASH (EventCode)\n);\n\n-- --------------------------------------------------------------------------------\n-- Routine DDL\n-- Note: comments before and after the routine body will not be stored by the server\n-- --------------------------------------------------------------------------------\nDELIMITER $$\n\nCREATE PROCEDURE `track_changes`(loadDate datetime)\nBEGIN\nDECLARE EXIT HANDLER\n    FOR SQLEXCEPTION\n    BEGIN\n        show errors;\n        ROLLBACK;\n    END;\nDECLARE CONTINUE HANDLER\n    FOR SQLWARNING, NOT FOUND\n    BEGIN\n        show errors;\n    END;\n-- must only be called after bulk load into listing_tmp\n-- add 'removed' event for old active listing that aren't in new active listing\n-- add 'price changed' event for listing with price changes\nstart transaction;\nset @removeCode = (select Code from listing_event_code c where c.Description = 'Removed');\nset @readdCode  = (select Code from listing_event_code c where c.Description = 'ReAdded');\nset @priceCode = (select Code from listing_event_code c where c.Description = 'PriceChanged');\ninsert into listing_event\n    (LotNum, Price, `EventDate`, EventCode)\n    select s.LotNum, s.Price, @loadDate, @removeCode\n        from active_listing s where s.lotnum not in\n            (select lotnum from listing_tmp);\n    \ninsert into listing \n    select * from listing_tmp where lotnum not in \n        (select lotnum from listing s);\n        \n-- insert a 'readd' event for entries in listing_tmp\n-- that are currently marked as 'removed' in the listing_event table            \ninsert into listing_event\n    (LotNum, Price, `EventDate`, EventCode)\n    select s.LotNum, s.Price, @loadDate, @readdCode\n        from (select s.LotNum, s.Price from listing s\n                join (select LotNum, max(EventDate) from listing_event where EventCode = @removeCode) se\n                    on s.lotnum = se.lotnum\n            ) s\n        join listing_tmp a\n            on s.lotnum = a.lotnum;\n\n-- insert a price-change event for prices that have changed\ninsert into listing_event\n    (LotNum, Price, `EventDate`, EventCode)\n    select s.LotNum, a.Price, @loadDate, @priceCode\n        from listing s\n        join listing_tmp a\n            on s.lotnum = a.lotnum\n        where not s.price = a.price;\n\ndrop table active_listing;\nrename table listing_tmp to active_listing;\ncommit;\nEND$$\n\n-- --------------------------------------------------------------------------------\n-- Routine DDL\n-- Note: comments before and after the routine body will not be stored by the server\n-- --------------------------------------------------------------------------------\nDELIMITER $$\n\nCREATE DEFINER=`root`@`localhost` PROCEDURE `notrack_changes`(loadDate datetime)\nBEGIN\n  DECLARE code CHAR(5) DEFAULT '00000';\n  DECLARE msg TEXT;\n  DECLARE rows INT;\n  DECLARE result TEXT;\n  -- declare exception handler for failed insert\n  DECLARE CONTINUE HANDLER FOR SQLEXCEPTION\n    BEGIN\n      GET DIAGNOSTICS CONDITION 1\n        code = RETURNED_SQLSTATE, msg = MESSAGE_TEXT;\n    END;\n\n  -- perform the insert\n  INSERT INTO t1 (int_col) VALUES(value);\n  -- check whether the insert was successful\n\n\nstart transaction;\ncreate temporary table fakelisting_event like listing_event;\ncreate temporary table fakelisting like listing;\n\nset @removeCode = (select Code from listing_event_code c where c.Description = 'Removed');\nset @readdCode  = (select Code from listing_event_code c where c.Description = 'ReAdded');\nset @priceCode = (select Code from listing_event_code c where c.Description = 'PriceChanged');\n\ninsert into fakelisting_event\n    (LotNum, Price, `EventDate`, EventCode)\n    select s.LotNum, s.Price, @loadDate, @removeCode\n        from active_listing s where s.lotnum not in\n            (select lotnum from listing_tmp);\n\nIF code = '00000' THEN\ninsert into fakelisting \n    select * from listing_tmp where lotnum not in \n        (select lotnum from listing s);\n\nELSE\n    SET result = CONCAT('insert failed, error = ',code,', message = ',msg);\nEND IF;\n    \n        \n\n\ninsert into fakelisting_event\n    (LotNum, Price, `EventDate`, EventCode)\n    select s.LotNum, s.Price, @loadDate, @readdCode\n        from (select s.LotNum, s.Price from listing s\n                join (select LotNum, max(EventDate) from listing_event where EventCode = @removeCode) se\n                    on s.lotnum = se.lotnum\n            ) s\n        join listing_tmp a\n            on s.lotnum = a.lotnum;\n\n\ninsert into fakelisting_event\n    (LotNum, Price, `EventDate`, EventCode)\n    select s.LotNum, a.Price, @loadDate, @priceCode\n        from listing s\n        join listing_tmp a\n            on s.lotnum = a.lotnum\n        where not s.price = a.price;\ncommit;\nselect result;\nEND$$\n\nDELIMITER ;",
			"file": "sellsdb.sql",
			"file_size": 5045,
			"file_write_time": 1364566694000000,
			"settings":
			{
				"buffer_size": 5707,
				"line_ending": "Unix"
			}
		},
		{
			"file": "rapnet/importer_test.go",
			"settings":
			{
				"buffer_size": 761,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oliver/.config/sublime-text-2/Packages/GoSublime/GoSublime.sublime-settings",
			"settings":
			{
				"buffer_size": 7704,
				"line_ending": "Unix"
			}
		},
		{
			"file": "rapnet/sells.go",
			"settings":
			{
				"buffer_size": 4147,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oliver/.config/sublime-text-2/Packages/GoSublime/Default (Linux).sublime-keymap",
			"settings":
			{
				"buffer_size": 5038,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oliver/src/mygo/src/github.com/go-sql-driver/mysql/connection.go",
			"settings":
			{
				"buffer_size": 4542,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/oliver/src/mygo/src/github.com/go-sql-driver/mysql/const.go",
			"settings":
			{
				"buffer_size": 2296,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 32 files for \"clientMultiStatements\"\n\n/home/oliver/src/mygo/src/github.com/go-sql-driver/mysql/const.go:\n   45  	clientReserved\n   46  	clientSecureConn\n   47: 	clientMultiStatements\n   48  	clientMultiResults\n   49  )\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 248,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/home/oliver/src/mygo/src/github.com/go-sql-driver/mysql/packets.go",
			"settings":
			{
				"buffer_size": 24099,
				"line_ending": "Unix"
			}
		},
		{
			"file": "notrackchanges.sql",
			"settings":
			{
				"buffer_size": 2628,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Pa",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/oliver/src/mygo/src/whitepine/notrackchanges.sql",
		"/home/oliver/src/mygo/src/whitepine/notrackchanges.slq",
		"/home/oliver/src/mygo/src/whitepine/bulkload.sql",
		"/home/oliver/src/mygo/src/whitepine/sellsdb.sql",
		"/home/oliver/src/mygo/src/whitepine/rapnet/sells.go",
		"/home/oliver/src/mygo/src/whitepine/whitepine.sublime-project",
		"/home/oliver/src/mygo/src/whitepine/whitepine.sublime-workspace",
		"/home/oliver/.config/sublime-text-2/Packages/GoSublime/GoSublime.sublime-settings",
		"/home/oliver/.config/sublime-text-2/Packages/User/GoSublime.sublime-settings",
		"/data/src/mygo/src/sellsimporter/main.go",
		"/home/oliver/.config/sublime-text-2/Packages/GoSublime/Default (Linux).sublime-keymap",
		"/home/oliver/.config/sublime-text-2/Packages/GoSublime/CHANGELOG.md",
		"/data/src/go/src/mellet/sellslib/importer.go",
		"/data/src/go/src/mellet/sellslib/main.go"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"clientMultiStatements",
			"readResultSetHeaderPacket",
			"use ",
			"sell_event",
			"sells",
			"active_sells",
			"sell_event",
			"sell_event_code",
			"sells",
			"sells_event_codes",
			"sells_events",
			"tab",
			"checkFileSize"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"listing_event",
			"listing",
			"active_listing",
			"listing_event",
			"listing_event_code",
			"listing",
			"sell_event_code",
			"sell_event"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "sellsdb.sql",
					"settings":
					{
						"buffer_size": 5707,
						"regions":
						{
						},
						"selection":
						[
							[
								5707,
								5707
							]
						],
						"settings":
						{
							"syntax": "Packages/SQL/SQL.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2184.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "rapnet/importer_test.go",
					"settings":
					{
						"buffer_size": 761,
						"regions":
						{
						},
						"selection":
						[
							[
								333,
								333
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/GoSublime.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/oliver/.config/sublime-text-2/Packages/GoSublime/GoSublime.sublime-settings",
					"settings":
					{
						"buffer_size": 7704,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "rapnet/sells.go",
					"settings":
					{
						"buffer_size": 4147,
						"regions":
						{
						},
						"selection":
						[
							[
								2182,
								2182
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/GoSublime.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1199.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/oliver/.config/sublime-text-2/Packages/GoSublime/Default (Linux).sublime-keymap",
					"settings":
					{
						"buffer_size": 5038,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1003.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/home/oliver/src/mygo/src/github.com/go-sql-driver/mysql/connection.go",
					"settings":
					{
						"buffer_size": 4542,
						"regions":
						{
						},
						"selection":
						[
							[
								3532,
								3532
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/GoSublime.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2326.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/home/oliver/src/mygo/src/github.com/go-sql-driver/mysql/const.go",
					"settings":
					{
						"buffer_size": 2296,
						"regions":
						{
						},
						"selection":
						[
							[
								1078,
								1078
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/GoSublime.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 459.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"settings":
					{
						"buffer_size": 248,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										171,
										192
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/home/oliver/src/mygo/src/github.com/go-sql-driver/mysql/packets.go",
					"settings":
					{
						"buffer_size": 24099,
						"regions":
						{
						},
						"selection":
						[
							[
								7227,
								7227
							]
						],
						"settings":
						{
							"syntax": "Packages/GoSublime/GoSublime.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4549.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "notrackchanges.sql",
					"settings":
					{
						"buffer_size": 2628,
						"regions":
						{
						},
						"selection":
						[
							[
								1230,
								1230
							]
						],
						"settings":
						{
							"syntax": "Packages/SQL/SQL.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 289.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///data/src/mygo/src/sellsimporter":
	{
		"height": 312.0
	},
	"output.9o:///data/src/mygo/src/sellslib":
	{
		"height": 209.0
	},
	"output.9o:///home/oliver/src/mygo/src/main":
	{
		"height": 163.0
	},
	"output.9o:///home/oliver/src/mygo/src/omellet/sellsimporter":
	{
		"height": 112.0
	},
	"output.9o:///home/oliver/src/mygo/src/omellet/sellslib":
	{
		"height": 294.0
	},
	"output.9o:///home/oliver/src/mygo/src/sellslib":
	{
		"height": 313.0
	},
	"output.9o:///home/oliver/src/mygo/src/whitepine/rapnet":
	{
		"height": 329.0
	},
	"output.GoSublime-source-output":
	{
		"height": 112.0
	},
	"output.GsDoc-output-output":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
